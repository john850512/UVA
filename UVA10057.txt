#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#pragma warning(disable:4996)

long long num[1000000];
/*一個很重要的觀念:因為區域變數預設就是動態變數，動態變數是使用stack 與靜態變數的heap不同 stack較heap小很多
所以陣列太大時有兩種簡單的方法
1.設在全域變數 當作靜態變數使用
2.設在區域變數 但前面加上static 在區域變數前加上static修飾字則會將變數由動態(dynamic)變數轉為靜態(static)變數*/
int main()
{

	long long  n = 0;
	long long  k = 0; //save n
	long long  temp = 0;
	long long  a = 0;
	long long  ans1 = 0;
	long long  ans2 = 0;
	long long  ans3 = 0;
	
	while(scanf("%lld",&n) != EOF)
	{
		k = n ;
		
		while(k--)
		{
			scanf("%lld",&num[a]);
			a++; 
			
		}
		for(int i = 0; i < n ; i++) //sort
		{
			for(int b = 0 ; b < (n-1) ; b++)
			{
				if(num[b] > num[b+1])
				{
					temp = num[b];
					num[b] = num[b+1];
					num[b+1] = temp;
				}
			}	
		}
		
		if(n % 2 == 0)
		{
			ans1 = num[((n/2)-1)];
			if(num[((n/2)-1)] == num[(n/2)])
			{
				for(int b = 0 ; b < n ; b++)
				{
					if(num[b] == ans1)
					{
						ans2++;
					}
				}
			}
			else //偶數中位數兩邊不同時要加1
			{
				for(int b = 0 ; b < n ; b++)
				{
					if(num[b] == num[((n/2)-1)] || num[b] == num[(n/2)])
					{
						ans2++;
					}
				}
							
			}
			ans3 = num[(n/2)] - num[((n/2)-1)] + 1;		
			printf("%lld %lld %lld\n",ans1,ans2,ans3);
		}
		else
		{
			if(n == 1)
			{
				ans1 = num[0];
			}
			else
			{
				ans1 = num[(n/2)];
			}
				for(int b = 0 ; b < n ; b++)
				{
					if(num[b] == num[(n/2)])
					{
						ans2++;
					}
				}			
			printf("%lld %lld 1\n",ans1,ans2);
		}
		memset(num,0,sizeof(num));
		k = 0;
		ans2 = 0;
		a = 0;
	}

	return 0;
}